display cfg
display cfg->timer
q
q
q
q
q
break motor_init 
c
n
n
display cfg->timer
display cfg->timer->name
q
break motor_init 
c
n
n
display cfg->timer->name
display cfg->timer
q
q
break motor_init 
c
n
n
display cfg->timer
q
break motor_init 
c
n
n
display cfg->timer
q
break motor_init 
c
n
n
display cfg
display cfg->timer
clear
q
break motor_init 
c
n
n
display cfg
display cfg->timer
display cfg->timer->pinctrl_save
q
break motor_init 
c
n
n
display cfg->timer->pinctrl_save
display cfg->timer->pinctrl_save->soc_gpio_pinctrl
display cfg->timer->pinctrl_save
q
break motor_init 
c
n
n
display cfg->timer->pinctrl_save
display cfg->timer
display cfg->timer.pinctrl_save
display cfg->timer->pinctrl_save
display cfg->timer->pinctrl_save->pinmux
display cfg->timer->pinctrl_save->pincfg
q
break motor_init 
c
n
n
display cfg->timer->pinctrl_save->pincfg
display cfg->timer->pinctrl_save->pinmux
q
n
n
q
break motor_init 
c
n
n
display cfg->timer
q
break motor_init 
c
n
n
display cfg->timer
q
break motor_init 
c
n
n
n
n
n
s
s
display TIMER_HAS_6CH
info macro 
info macros
info macro TIMER_HAS_6CH
info macros TIMER_HAS_6CH
s
n
n
n
q
break motor_init 
c
n
n
n
n
n
s
s
display d
s
n
q
break motor_init 
c
n
n
display cfg
display cfg->timer
display cfg->timer->pinctrl_save
q
break motor_init 
c
n
n
n
q
break motor_init 
n
c
n
display cfg
display cfg->timer
display cfg->timer->pinctrl
p cfg->timer-pinctrl 
p cfg->timer-pinctrl->soc_gpio_pinctrl
display cfg->timer-pinctrl->soc_gpio_pinctrl
display 0x8005d34
p
p*0x8005d34@2
p*0x8005d34@3
p*0x8005d34@2
p*0x8005d34@5
p*0x8005d34@10
p*cfg->timer->pinctrl@2
p*cfg->timer->pinctrl@3
p*cfg->timer->pinctrl@2
p*cfg->timer->pinctrl@3
q
break motor_stm32_init
c
display clk
q
break motor_stm32_init
c
n
display clk
n
display clk
p*clk@0
p*clk@1
p*clk@2
p*clk@3
q
break motor_stm32_init
c
n
n
display err
n
n
n
display err
n
n
display err
n
display err
q
break motor_stm32_init
c
n
n
n
n
n
n
n
n
n
n
display err
n
n
display err
q
break motor_stm32_init
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
q
break main
clear
clear main
c
info registers
info all-registers
info all-registers
p/x*TIM3->ARR
q
c
p/x*TIM3->ARR
set mem inaccessible-by-default off
p/x*TIM3->ARR
display TIM3->ARR
display TIM3->CMT
display TIM3->CNT
c
display TIM3->CNT
TIM3->CNT = 0
TIM3->CNT=0
set TIM3->CNT = 3
c
set TIM3->CNT = 3
c
c
q
q
